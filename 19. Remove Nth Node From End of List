/*Problem Statement:Given the head of a linked list, remove the nth node from the end of the list and return its head.
              --------------- ------------------CODE--------------------------------------------------------------------------*/
 /**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode*temp=head;
        ListNode*slow=head;
        if(head==NULL &&head->next==NULL && n==1) 
         return NULL;
        int count=0;
        while(temp->next!=NULL){
            temp=temp->next;
            count++;
        }
        int position=count-n;

        if(position<0){
              head=head->next;
              return head;
          }
        for(int i=0;i<position;i++){
           slow=slow->next;
        }
        slow->next=slow->next->next;
                
        return head;
    }
};
